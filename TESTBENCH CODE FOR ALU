module ALU_tb;
    reg [31:0] A, B;
    reg [2:0] ALU_op;
    wire [31:0] Result;
    wire Zero, Carry, Negative, Overflow;

    ALU uut (
        .A(A),
        .B(B),
        .ALU_op(ALU_op),
        .Result(Result),
        .Zero(Zero),
        .Carry(Carry),
        .Negative(Negative),
        .Overflow(Overflow)
    );

    initial begin
        
        A = 32'h00000010; B = 32'h00000020; ALU_op = 3'b000;
        #10;

        
        A = 32'h00000030; B = 32'h00000010; ALU_op = 3'b001;
        #10;

        
        A = 32'hFFFFFFFF; B = 32'h0F0F0F0F; ALU_op = 3'b010;
        #10;

        
        A = 32'hFFFFFFFF; B = 32'h0F0F0F0F; ALU_op = 3'b011;
        #10;

       
        A = 32'hFFFFFFFF; B = 32'h0F0F0F0F; ALU_op = 3'b100;
        #10;

        A = 32'h00000010; B = 32'h00000001; ALU_op = 3'b101;
        #10;

       
        A = 32'h00000010; B = 32'h00000001; ALU_op = 3'b110;
        #10;

        
        A = 32'h00000010; B = 32'h00000020; ALU_op = 3'b111;
        #10;
 
    end
endmodule

